/*
 * RCC_interface.h
 *
 *  Created on:	Jul 26, 2022
 *  Author:		Ali Emad Ali
 *
 *  References:
 *  	STM RM0368:	6.	Reset and clock control (RCC) for STM32F401xB/C and STM32F401xD/E
 */

#ifndef RCC_INTERFACE_H_
#define RCC_INTERFACE_H_


typedef enum{
	/*	AHB1 peripherals	*/
	RCC_PERIPHERAL_GPIOA	= 0,
	RCC_PERIPHERAL_GPIOB	= 1,
	RCC_PERIPHERAL_GPIOC	= 2,
	RCC_PERIPHERAL_GPIOD	= 3,
	RCC_PERIPHERAL_GPIOE	= 4,
	RCC_PERIPHERAL_GPIOH	= 7,
	RCC_PERIPHERAL_CRC		= 12,
	RCC_PERIPHERAL_DMA1		= 21,
	RCC_PERIPHERAL_DMA2		= 22,
	/*	~~~~~~~~~~~~~~~~~~~	*/

	/*	AHB2 peripherals	*/
	RCC_PERIPHERAL_OTGFS	= 32+7,
	/*	~~~~~~~~~~~~~~~~~~~	*/

	/*	APB1 peripherals	*/
	RCC_PERIPHERAL_TIM2		= 32*2+0,
	RCC_PERIPHERAL_TIM3		= 32*2+1,
	RCC_PERIPHERAL_TIM4		= 32*2+2,
	RCC_PERIPHERAL_TIM5		= 32*2+3,
	RCC_PERIPHERAL_WWDG		= 32*2+11,
	RCC_PERIPHERAL_SPI2		= 32*2+14,
	RCC_PERIPHERAL_SPI3		= 32*2+15,
	RCC_PERIPHERAL_USART2	= 32*2+17,
	RCC_PERIPHERAL_I2C1		= 32*2+21,
	RCC_PERIPHERAL_I2C2		= 32*2+22,
	RCC_PERIPHERAL_I2C3		= 32*2+23,
	RCC_PERIPHERAL_PWR		= 32*2+28,
	/*	~~~~~~~~~~~~~~~~~~~	*/

	/*	APB2 peripherals	*/
	RCC_PERIPHERAL_TIM1		= 32*3+0,
	RCC_PERIPHERAL_USART1	= 32*3+4,
	RCC_PERIPHERAL_USART6	= 32*3+5,
	RCC_PERIPHERAL_ADC1		= 32*3+8,
	RCC_PERIPHERAL_SDIO		= 32*3+11,
	RCC_PERIPHERAL_SPI1		= 32*3+12,
	RCC_PERIPHERAL_SPI4		= 32*3+13,
	RCC_PERIPHERAL_SYSCFG	= 32*3+14,
	RCC_PERIPHERAL_TIM9		= 32*3+16,
	RCC_PERIPHERAL_TIM10	= 32*3+17,
	RCC_PERIPHERAL_TIM11	= 32*3+18
}RCC_PERIPHERAL;

typedef enum{
	RCC_SYSCLOCKSWITCH_HSI = 0,
	RCC_SYSCLOCKSWITCH_HSE = 1,
	RCC_SYSCLOCKSWITCH_PLL = 2,
}RCC_SYSCLOCKSWITCH;

typedef enum{
	RCC_AHBPRESCALER_1 		= 0,
	RCC_AHBPRESCALER_2 		= 8,
	RCC_AHBPRESCALER_4 		= 9,
	RCC_AHBPRESCALER_8 		= 10,
	RCC_AHBPRESCALER_16		= 11,
	RCC_AHBPRESCALER_64		= 12,
	RCC_AHBPRESCALER_128	= 13,
	RCC_AHBPRESCALER_256	= 14,
	RCC_AHBPRESCALER_512	= 15,
}RCC_AHBPRESCALER;

typedef enum{
	RCC_APBPRESCALER_1 		= 0,
	RCC_APBPRESCALER_2 		= 4,
	RCC_APBPRESCALER_4 		= 5,
	RCC_APBPRESCALER_8 		= 6,
	RCC_APBPRESCALER_16 	= 7,
}RCC_APBPRESCALER;

typedef enum{
	RCC_MCO1CLOCKSOURCE_HSI	= 0,
	RCC_MCO1CLOCKSOURCE_LSE	= 1,
	RCC_MCO1CLOCKSOURCE_HSE	= 2,
	RCC_MCO1CLOCKSOURCE_PLL	= 3
}RCC_MCO1CLOCKSOURCE;

typedef enum{
	RCC_MCO2CLOCKSOURCE_SYSCLK	= 0,
	RCC_MCO2CLOCKSOURCE_PLLI2S	= 1,
	RCC_MCO2CLOCKSOURCE_HSE		= 2,
	RCC_MCO2CLOCKSOURCE_PLL		= 3
}RCC_MCO2CLOCKSOURCE;

typedef enum{
	RCC_MCOPRESCALER_1 = 0,
	RCC_MCOPRESCALER_2 = 4,
	RCC_MCOPRESCALER_3 = 5,
	RCC_MCOPRESCALER_4 = 6,
	RCC_MCOPRESCALER_5 = 7,
}RCC_MCOPRESCALER;

typedef enum{
	RCC_PLLDEVISIONFACTOR_2 = 0,
	RCC_PLLDEVISIONFACTOR_4 = 1,
	RCC_PLLDEVISIONFACTOR_6 = 2,
	RCC_PLLDEVISIONFACTOR_8 = 3,
}RCC_PLLSYSDEVISIONFACTOR;

typedef enum{
	RCC_PLLSOURCE_HSI = 0,
	RCC_PLLSOURCE_HSE = 1
}RCC_PLLSOURCE;

#define RCC_HSI_CLK		16000000U
#define RCC_LSI_CLK		8000000U

void RCC_voidMCO1Init(RCC_MCO1CLOCKSOURCE clkSource, RCC_MCOPRESCALER prescaler);

void RCC_voidMCO2Init(RCC_MCO2CLOCKSOURCE clkSource, RCC_MCOPRESCALER prescaler);

void RCC_voidSysClockInit(
	b8 hsiEnable, b8 hseEnable, b8 pllEnable, b8 cssEnable,
	b8							hseBypass,
	RCC_SYSCLOCKSWITCH			sysClkSwitch,
	RCC_PLLSOURCE				pllClockSource,
	u16							pllMultiplicationFactor	/* i.e.: PLLN, from 2 to 432 */,
	u16							pllMainDivisionFactor	/* i.e.: PLLM, from 2 to 63 */,
	RCC_PLLSYSDEVISIONFACTOR	pllSysDivisionFactor	/* i.e.: PLLP */
	);

void RCC_voidAHBClockInit(RCC_AHBPRESCALER	prescaler);

void RCC_voidAPB1ClockInit(RCC_APBPRESCALER	prescaler);

void RCC_voidAPB2ClockInit(RCC_APBPRESCALER	prescaler);

void RCC_voidEnablePeripheralClk(RCC_PERIPHERAL peripheral);

void RCC_voidDisablePeripheralClk(RCC_PERIPHERAL peripheral);


#endif		/*	RCC_INTERFACE_H_	*/
